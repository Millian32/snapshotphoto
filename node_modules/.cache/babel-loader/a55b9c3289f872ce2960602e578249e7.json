{"ast":null,"code":"import React from\"react\";import NoImages from\"./NoImages\";import Image from\"./Image\";var Gallery=function Gallery(props){var results=props.data;var images;var noImages;// map variables to each item in fetched image array and return image component\nif(results.length>0){images=results.map(function(image){var farm=image.farm;var server=image.server;var id=image.id;var secret=image.secret;var title=image.title;var url=\"https://farm\".concat(farm,\".staticflickr.com/\").concat(server,\"/\").concat(id,\"_\").concat(secret,\"_m.jpg\");return/*#__PURE__*/React.createElement(Image,{url:url,key:id,alt:title});});}else{noImages=/*#__PURE__*/React.createElement(NoImages,null);// return 'not found' component if no images fetched\n}return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"ul\",null,images),noImages);};export default Gallery;","map":{"version":3,"sources":["/home/millian/Documents/GitHub/snapshotphoto/src/components/Gallery.js"],"names":["React","NoImages","Image","Gallery","props","results","data","images","noImages","length","map","image","farm","server","id","secret","title","url"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CACA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,CACA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAAAC,KAAK,CAAI,CACvB,GAAMC,CAAAA,OAAO,CAAGD,KAAK,CAACE,IAAtB,CACA,GAAIC,CAAAA,MAAJ,CACA,GAAIC,CAAAA,QAAJ,CACA;AACA,GAAIH,OAAO,CAACI,MAAR,CAAiB,CAArB,CAAwB,CACtBF,MAAM,CAAGF,OAAO,CAACK,GAAR,CAAY,SAAAC,KAAK,CAAI,CAC5B,GAAIC,CAAAA,IAAI,CAAGD,KAAK,CAACC,IAAjB,CACA,GAAIC,CAAAA,MAAM,CAAGF,KAAK,CAACE,MAAnB,CACA,GAAIC,CAAAA,EAAE,CAAGH,KAAK,CAACG,EAAf,CACA,GAAIC,CAAAA,MAAM,CAAGJ,KAAK,CAACI,MAAnB,CACA,GAAIC,CAAAA,KAAK,CAAGL,KAAK,CAACK,KAAlB,CACA,GAAIC,CAAAA,GAAG,uBAAkBL,IAAlB,8BAA2CC,MAA3C,aAAqDC,EAArD,aAA2DC,MAA3D,UAAP,CACA,mBAAO,oBAAC,KAAD,EAAO,GAAG,CAAEE,GAAZ,CAAiB,GAAG,CAAEH,EAAtB,CAA0B,GAAG,CAAEE,KAA/B,EAAP,CACD,CARQ,CAAT,CASD,CAVD,IAUO,CACLR,QAAQ,cAAG,oBAAC,QAAD,MAAX,CAAyB;AAC1B,CACD,mBACE,4CACE,8BAAKD,MAAL,CADF,CAEGC,QAFH,CADF,CAMD,CAxBD,CA0BA,cAAeL,CAAAA,OAAf","sourcesContent":["import React from \"react\";\nimport NoImages from \"./NoImages\";\nimport Image from \"./Image\";\nconst Gallery = props => {\n  const results = props.data;\n  let images;\n  let noImages;\n  // map variables to each item in fetched image array and return image component\n  if (results.length > 0) {\n    images = results.map(image => {\n      let farm = image.farm;\n      let server = image.server;\n      let id = image.id;\n      let secret = image.secret;\n      let title = image.title;\n      let url = `https://farm${farm}.staticflickr.com/${server}/${id}_${secret}_m.jpg`;\n      return <Image url={url} key={id} alt={title} />;\n    });\n  } else {\n    noImages = <NoImages />; // return 'not found' component if no images fetched\n  }\n  return (\n    <div>\n      <ul>{images}</ul>\n      {noImages}\n    </div>\n  );\n};\n\nexport default Gallery;\n"]},"metadata":{},"sourceType":"module"}